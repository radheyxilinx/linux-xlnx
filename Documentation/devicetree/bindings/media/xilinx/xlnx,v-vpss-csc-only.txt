Xilinx VPSS Color Space Converter (CSC)
-----------------------------------------
The Xilinx VPSS Color Space Converter (CSC) is a Video IP that currently supports
color space conversion from RGB input to RGB or YUV 444 output. No other input or
output formats are supported.

The V4L2 subdevice driver exposes a control interface to manipulate user controls
like brightness, saturation, contrast, red gain, blue gain and green gain. Currently,
only BT 709 standard is supported on the output side.

Required properties:

- compatible: Must be "xlnx,v-vpss-csc-only".

- reg: Physical base address and length of the registers set for the device.

- clocks: Reference to the video core clock.

- ports: Video ports, using the DT bindings defined in ../video-interfaces.txt.
  The scaler has an input port (0) and an output port (1).


Required port properties:

- xlnx,video-format: Must be one of RBG only for
  input port (0) and RBG or YUV444 for output port (1).

- xlnx,video-width: Video width as defined in video.txt

Example:
	csc_1:csc@0xa0040000 {
		compatible = "xlnx,v-vpss-csc-only";
		reg = <0x0 0xa0040000 0x0 0x10000>;
		clocks = <&vid_stream_clk>;

		ports {
                        #address-cells = <1>;
                        #size-cells = <0>;

                        port@0 {
                                reg = <0>;

                                xlnx,video-format = <XVIP_VF_RBG>;
                                xlnx,video-width = <8>;

                                csc_in: endpoint {
                                        remote-endpoint = <&gamma_out>;
                                };
                        };
                        port@1 {
                                reg = <1>;

                                xlnx,video-format = <XVIP_VF_RBG>;
                                xlnx,video-width = <8>;

                                csc_out: endpoint {
                                        remote-endpoint = <&scalar_in>;
                                };
                        };
                };

	};
